//===========================Адаптивное свойство================================
$maxWidth: 1920;
$maxWidthContainer: 1170;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type == 1 {
        //только если меньше контейнера
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type == 2 {
        //только если больше контейнера
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}){
            #{$property}: calc(#{$minSize + px} + #{addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        //всегда
        #{$property}: calc(#{$minSize + px} + #{addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}
//================================================================================

//===================Функция перевода из пикселей в относительные единицы==================
// перевод в %
@function prc($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
// перевод в REM
@function rem($px) {
    $result: math.div($px / 16) + rem;
    @return $result;
}
// перевод в EM
@function em($px) {
    $result: math.div($px, 16) + em;
    @return $result;
}

//=========================================================================================
